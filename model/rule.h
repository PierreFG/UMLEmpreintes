//---------- Interface de la classe <Rule> (fichier Rule.h) ----------------
#if ! defined ( RULE_H )
#define RULE_H

#include <string>
#include <map>
#include <vector>
#include <memory>
using namespace std;

/*
* Class generated by the set analaysis process
* Contains a vector of desease associated with their linear regression coefficients
*/

class Rule
{

public:
    Rule (map<string,vector<double>> ,map<int,vector<string>>);
    /*Constructor*/

    virtual ~Rule ();
    /*Default destructor*/

    map<string,vector<double>> getAsso();
    /*Returns the asso attribute*/

    map<int,vector<string>> getOneHotRule();
    /*Returns the oneHotRule attribute*/

    friend ostream& operator<<(ostream& out, const Rule& r);
    /*Extern overload of the output stream operator*/

<<<<<<< HEAD
protected:
    map<string,vector<double>> asso; 
=======
private:
    map<string,vector<double>> asso;
>>>>>>> 7d71a76224b8c3d95e755fca3c291d078eaaddf4
    map<int,vector<string>> oneHotRule;
};

typedef shared_ptr<Rule> Rule_ptr;

#endif // RULE_H
